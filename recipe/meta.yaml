{% set version = "3.13.0" %}
{% set name = "wisdem" %}
{% set build = 0 %}

# MPI now supported! https://conda-forge.org/docs/maintainer/knowledge_base.html#message-passing-interface-mpi
# ensure mpi is defined (needed for conda-smithy recipe-lint)
{% set mpi = mpi or 'nompi' %}

{% if mpi == 'nompi' %}
# prioritize nompi variant via build number
{% set build = build + 100 %}
{% endif %}
package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/WISDEM/WISDEM/archive/v{{ version }}.tar.gz
    # Download the tar-ball and do: openssl sha256 file.tar.gz to update
  sha256: 0bbcca2b4b1136fc7519750b4b0e0f625487d86294bbf62abb7fa98e6cec4e2f
  #patches:
  #    - meson_files.patch
      
build:
  number: {{ build }}

  # add build string so packages can depend on
  # mpi or nompi variants explicitly:
  # `pkg * mpi_mpich_*` for mpich
  # `pkg * mpi_*` for any mpi
  # `pkg * nompi_*` for no mpi

  {% if mpi != 'nompi' %}
  {% set mpi_prefix = "mpi_" + mpi %}
  {% else %}
  {% set mpi_prefix = "nompi" %}
  {% endif %}
  string: "{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}"

  {% if mpi != 'nompi' %}
  run_exports:
    - {{ name }} * {{ mpi_prefix }}_*
  {% endif %}

  skip: true  # [py<39]
  #script:
  #  - {{ PYTHON }} -m pip install . --no-deps -vv
  #  - rm -rf {{ SP_DIR }}/meson_build         # [not win]
  #  - rmdir /s /q {{ SP_DIR }}\meson_build    # [win]

requirements:
  build:
    - {{ compiler('c') }}         # [not win]
    - {{ compiler('fortran') }}
    - {{ compiler('m2w64_c') }}   # [win]
    - cross-python_{{ target_platform }}      # [build_platform != target_platform]
    - python      # [build_platform != target_platform]
    - make
    - meson
    - ninja
    - numpy
    - pkg-config
    - wheel
    - python-build
  host:
    - cython
#    - libblas
#    - liblapack
    - libpython        # [win]
    - python
    - python-build
    - pip
    - numpy
    - setuptools
    - {{ mpi }}  # [mpi != 'nompi']
  run:
#    - cython
    - jsonschema
    - matplotlib-base
    - moorpy
    - nlopt
    - {{ pin_compatible('numpy') }}
    - openmdao <3.28
    - openpyxl
    - pandas
    - pydoe2
    - pyoptsparse
    - pytest
    - python
    - python-benedict
    - pyyaml
    - ruamel.yaml
    - scipy
    - simpy
    - sortedcontainers
    - statsmodels
    - {{ mpi }}  # [mpi != 'nompi']    

# Putting numpy in 'host' section and pin_compatible in run per conda-forge guidance
test:
  imports:
    - wisdem
#  requires:
#      - pip
#  commands:
#      - pip install marmot-agents
#      - python -c "import unittest; import wisdem.test.test_gluecode.test_gluecode as myt; unittest.TextTestRunner().run(myt.suite() )"

about:
  home: https://wisdem.readthedocs.io
  license: Apache-2.0
  license_file: LICENSE
  summary: Wind-Plant Integrated System Design and Engineering Model
  description: |
    The Wind-Plant Integrated System Design and Engineering Model (WISDEMÂ®) is a
    set of models for assessing overall wind plant cost of energy (COE). The models
    use wind turbine and plant cost and energy production as well as financial
    models to estimate coe and other wind plant system attributes. WISDEM is developed by
    the National Renewable Energy Lab, on top of NASA's OpenMDAO library.
  doc_url: https://wisdem.readthedocs.io
  dev_url: https://github.com/wisdem/wisdem

extra:
  recipe-maintainers:
    - ptrbortolotti
    - gbarter
